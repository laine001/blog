import{_ as a,C as l,c as p,o,ad as e,G as t}from"./chunks/framework.CMzpCLzZ.js";const E=JSON.parse('{"title":"项目工具随手记","description":"","frontmatter":{},"headers":[],"relativePath":"fe/work-utils.md","filePath":"fe/work-utils.md","lastUpdated":1754895279000}'),c={name:"fe/work-utils.md"};function r(B,s,y,i,F,C){const n=l("git-talk");return o(),p("div",null,[s[0]||(s[0]=e(`<h1 id="项目工具随手记" tabindex="-1">项目工具随手记 <a class="header-anchor" href="#项目工具随手记" aria-label="Permalink to &quot;项目工具随手记&quot;">​</a></h1><h2 id="获取路径中的参数" tabindex="-1">获取路径中的参数 <a class="header-anchor" href="#获取路径中的参数" aria-label="Permalink to &quot;获取路径中的参数&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> getQuery</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">k</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">  let</span><span style="color:#E06C75;"> searchStr</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> window</span><span style="color:#56B6C2;"> &amp;&amp;</span><span style="color:#E5C07B;"> window</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">location</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">search</span><span style="color:#56B6C2;"> &amp;&amp;</span><span style="color:#E5C07B;"> location</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">search</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">slice</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">  if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">searchStr</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">    const</span><span style="color:#E5C07B;"> searchArr</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> searchStr</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">split</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;&amp;&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">||</span><span style="color:#ABB2BF;"> []</span></span>
<span class="line"><span style="color:#C678DD;">    const</span><span style="color:#E5C07B;"> result</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> searchArr</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">reduce</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">obj</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">item</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">      let</span><span style="color:#ABB2BF;"> [</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">, ...</span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> item</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">split</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;=&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">      let</span><span style="color:#E06C75;"> ans</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> decodeURIComponent</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">value</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">join</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;&#39;</span><span style="color:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#E06C75;">      obj</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> ans</span></span>
<span class="line"><span style="color:#C678DD;">      return</span><span style="color:#E06C75;"> obj</span></span>
<span class="line"><span style="color:#ABB2BF;">    }, {})</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E06C75;"> k</span><span style="color:#C678DD;"> ?</span><span style="color:#E06C75;"> result</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">k</span><span style="color:#ABB2BF;">] </span><span style="color:#C678DD;">:</span><span style="color:#E06C75;"> result</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre></div><h2 id="eggjs-中使用-mock" tabindex="-1">eggjs 中使用 mock <a class="header-anchor" href="#eggjs-中使用-mock" aria-label="Permalink to &quot;eggjs 中使用 mock&quot;">​</a></h2><blockquote><p>在项目中新建 mock 文件夹，里面专门存放各个 mock 数据 json 文件</p></blockquote><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> glob</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;glob&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> path</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;path&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> mockRoutes</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> []</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 读取mock文件夹下的所有文件路径</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> mockFiles</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> glob</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">sync</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">join</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;../mock/**/*.json&#39;</span><span style="color:#ABB2BF;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">mockFiles</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">forEach</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">file</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">  let</span><span style="color:#E06C75;"> route</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> file</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">split</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;/mock&#39;</span><span style="color:#ABB2BF;">)[</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">].</span><span style="color:#61AFEF;">replace</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;.json&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 获取真实api路径</span></span>
<span class="line"><span style="color:#C678DD;">  if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">route</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">includes</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;_/&#39;</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#E06C75;">    route</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> \`</span><span style="color:#C678DD;">\${</span><span style="color:#E5C07B;">route</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">split</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;_/&#39;</span><span style="color:#ABB2BF;">)[</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">]</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">*\`</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#E5C07B;">  mockRoutes</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">push</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">route</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">app</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">  const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">router</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">controller</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> app</span></span>
<span class="line"><span style="color:#E5C07B;">  mockRoutes</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">forEach</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">path</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">    router</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">all</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">path</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">controller</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">proxy</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">proxyToMock</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  })</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre></div><h2 id="生成指定范围的随机整数" tabindex="-1">生成指定范围的随机整数 <a class="header-anchor" href="#生成指定范围的随机整数" aria-label="Permalink to &quot;生成指定范围的随机整数&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// @param {Number} start 区间起点</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// @param {Number} end  区间终点</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> rand</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">start</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">end</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">  return</span><span style="color:#E5C07B;"> Math</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">round</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Math</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">random</span><span style="color:#ABB2BF;">() </span><span style="color:#56B6C2;">*</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">end</span><span style="color:#56B6C2;"> -</span><span style="color:#E06C75;"> start</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">+</span><span style="color:#E06C75;"> start</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre></div><h2 id="防抖" tabindex="-1">防抖 <a class="header-anchor" href="#防抖" aria-label="Permalink to &quot;防抖&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#E5C07B;font-style:italic;"> {Function}</span><span style="color:#E06C75;font-style:italic;"> fn</span><span style="color:#7F848E;font-style:italic;">  函数</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#E5C07B;font-style:italic;"> {Number}</span><span style="color:#E06C75;font-style:italic;"> delay</span><span style="color:#7F848E;font-style:italic;"> 时延</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#E5C07B;font-style:italic;"> {Object}</span><span style="color:#E06C75;font-style:italic;"> context</span><span style="color:#7F848E;font-style:italic;"> 上下文</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@return</span><span style="color:#E5C07B;font-style:italic;"> {Function}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> function</span><span style="color:#61AFEF;"> debounce</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">fn</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">delay</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 100</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">context</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> null</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">  let</span><span style="color:#E06C75;"> timer</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> null</span></span>
<span class="line"><span style="color:#C678DD;">  return</span><span style="color:#ABB2BF;"> (...</span><span style="color:#E06C75;font-style:italic;">params</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#61AFEF;">    clearTimeout</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">timer</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E06C75;">    timer</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> setTimeout</span><span style="color:#ABB2BF;">(() </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">      fn</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">call</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">context</span><span style="color:#ABB2BF;">, ...</span><span style="color:#E06C75;">params</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    }, </span><span style="color:#E06C75;">delay</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre></div><h2 id="节流" tabindex="-1">节流 <a class="header-anchor" href="#节流" aria-label="Permalink to &quot;节流&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#E5C07B;font-style:italic;"> {Function}</span><span style="color:#E06C75;font-style:italic;"> fn</span><span style="color:#7F848E;font-style:italic;">  函数</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#E5C07B;font-style:italic;"> {Number}</span><span style="color:#E06C75;font-style:italic;"> threshold</span><span style="color:#7F848E;font-style:italic;"> 时延</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#E5C07B;font-style:italic;"> {Object}</span><span style="color:#E06C75;font-style:italic;"> context</span><span style="color:#7F848E;font-style:italic;"> 上下文</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@return</span><span style="color:#E5C07B;font-style:italic;"> {Function}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> throttle</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">fn</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">threshold</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 50</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">context</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> null</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">  let</span><span style="color:#E06C75;"> last</span></span>
<span class="line"><span style="color:#C678DD;">  let</span><span style="color:#E06C75;"> timer</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> null</span></span>
<span class="line"><span style="color:#C678DD;">  return</span><span style="color:#ABB2BF;"> (...</span><span style="color:#E06C75;font-style:italic;">params</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">    const</span><span style="color:#E5C07B;"> now</span><span style="color:#56B6C2;"> =</span><span style="color:#56B6C2;"> +</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> Date</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#C678DD;">    if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">last</span><span style="color:#56B6C2;"> &amp;&amp;</span><span style="color:#E06C75;"> now</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#E06C75;"> last</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> threshold</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#61AFEF;">      clearTimeout</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">timer</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E06C75;">      timer</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> setTimeout</span><span style="color:#ABB2BF;">(() </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">        last</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> now</span></span>
<span class="line"><span style="color:#E5C07B;">        fn</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">call</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">context</span><span style="color:#ABB2BF;">, ...</span><span style="color:#E06C75;">params</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">      }, </span><span style="color:#E06C75;">threshold</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    } </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">      last</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> now</span></span>
<span class="line"><span style="color:#E5C07B;">      fn</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">call</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">context</span><span style="color:#ABB2BF;">, ...</span><span style="color:#E06C75;">params</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre></div><h2 id="复制" tabindex="-1">复制 <a class="header-anchor" href="#复制" aria-label="Permalink to &quot;复制&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// import ***</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> copyText</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">text</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">  return</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> Promise</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">resolve</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">reject</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">    var</span><span style="color:#E06C75;"> fakeElement</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createElement</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;button&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">    var</span><span style="color:#E06C75;"> clipboard</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Clipboard</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">fakeElement</span><span style="color:#ABB2BF;">, {</span></span>
<span class="line"><span style="color:#61AFEF;">      text</span><span style="color:#ABB2BF;">: </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#E06C75;"> text</span></span>
<span class="line"><span style="color:#ABB2BF;">      },</span></span>
<span class="line"><span style="color:#61AFEF;">      action</span><span style="color:#ABB2BF;">: </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#98C379;"> &#39;copy&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">      },</span></span>
<span class="line"><span style="color:#E06C75;">      container</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">document</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    })</span></span>
<span class="line"><span style="color:#E5C07B;">    clipboard</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;success&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">e</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">      clipboard</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">destroy</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#61AFEF;">      resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">e</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    })</span></span>
<span class="line"><span style="color:#E5C07B;">    clipboard</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;error&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">e</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">      clipboard</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">destroy</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#61AFEF;">      reject</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">e</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    })</span></span>
<span class="line"><span style="color:#E5C07B;">    document</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">body</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">appendChild</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">fakeElement</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E5C07B;">    fakeElement</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">click</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#E5C07B;">    document</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">body</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">removeChild</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">fakeElement</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  })</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre></div><h2 id="获取字符的长度-包括中英文符号等" tabindex="-1">获取字符的长度（包括中英文符号等） <a class="header-anchor" href="#获取字符的长度-包括中英文符号等" aria-label="Permalink to &quot;获取字符的长度（包括中英文符号等）&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#61AFEF;"> getStringWidth</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">val</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">  let</span><span style="color:#E06C75;"> len</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span></span>
<span class="line"><span style="color:#C678DD;">  for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#E5C07B;"> val</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">    const</span><span style="color:#E5C07B;"> length</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> val</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">charCodeAt</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">    if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">length</span><span style="color:#56B6C2;"> &gt;=</span><span style="color:#D19A66;"> 0</span><span style="color:#56B6C2;"> &amp;&amp;</span><span style="color:#E06C75;"> length</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#D19A66;"> 128</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E06C75;">      len</span><span style="color:#56B6C2;"> +=</span><span style="color:#D19A66;"> 1</span></span>
<span class="line"><span style="color:#ABB2BF;">    } </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">      len</span><span style="color:#56B6C2;"> +=</span><span style="color:#D19A66;"> 2</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#C678DD;">  return</span><span style="color:#E06C75;"> len</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre></div><h2 id="等待执行" tabindex="-1">等待执行 <a class="header-anchor" href="#等待执行" aria-label="Permalink to &quot;等待执行&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> const</span><span style="color:#61AFEF;"> sleep</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">delay</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> Promise</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">resolve</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#61AFEF;"> setTimeout</span><span style="color:#ABB2BF;">(() </span><span style="color:#C678DD;">=&gt;</span><span style="color:#61AFEF;"> resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">null</span><span style="color:#ABB2BF;">), </span><span style="color:#E06C75;">delay</span><span style="color:#ABB2BF;">))</span></span></code></pre></div><h2 id="是否为闰年" tabindex="-1">是否为闰年 <a class="header-anchor" href="#是否为闰年" aria-label="Permalink to &quot;是否为闰年&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> function</span><span style="color:#61AFEF;"> isLeapYear</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">y</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">  return</span><span style="color:#E06C75;"> y</span><span style="color:#56B6C2;"> %</span><span style="color:#D19A66;"> 100</span><span style="color:#C678DD;"> ?</span><span style="color:#56B6C2;"> !</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">y</span><span style="color:#56B6C2;"> %</span><span style="color:#D19A66;"> 4</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">:</span><span style="color:#56B6C2;"> !</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">y</span><span style="color:#56B6C2;"> %</span><span style="color:#D19A66;"> 400</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre></div><h2 id="获取路径中所有的-query" tabindex="-1">获取路径中所有的 query <a class="header-anchor" href="#获取路径中所有的-query" aria-label="Permalink to &quot;获取路径中所有的 query&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> const</span><span style="color:#61AFEF;"> getUrlParam</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">  try</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 获取url中&quot;?&quot;符后的字串</span></span>
<span class="line"><span style="color:#C678DD;">    const</span><span style="color:#E5C07B;"> url</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> location</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">search</span></span>
<span class="line"><span style="color:#C678DD;">    const</span><span style="color:#E5C07B;"> theRequest</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">any</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {}</span></span>
<span class="line"><span style="color:#C678DD;">    if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">url</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">indexOf</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;?&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">!==</span><span style="color:#56B6C2;"> -</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">      const</span><span style="color:#E5C07B;"> str</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> url</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">substr</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">      const</span><span style="color:#E5C07B;"> strs</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> str</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">split</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;&amp;&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">      for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#E5C07B;"> strs</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">        const</span><span style="color:#ABB2BF;"> [</span><span style="color:#E5C07B;">k</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &#39;&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">v</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &#39;&#39;</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> strs</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">].</span><span style="color:#61AFEF;">split</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;=&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E06C75;">        theRequest</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">k</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> decodeURIComponent</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">v</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E06C75;"> theRequest</span></span>
<span class="line"><span style="color:#ABB2BF;">  } </span><span style="color:#C678DD;">catch</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">e</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#ABB2BF;"> {}</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre></div><h2 id="将-object-拼接成-query-格式的-string" tabindex="-1">将 object 拼接成 query 格式的 string <a class="header-anchor" href="#将-object-拼接成-query-格式的-string" aria-label="Permalink to &quot;将 object 拼接成 query 格式的 string&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 将object拼接成query格式的string</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#E06C75;font-style:italic;"> object</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@returns</span><span style="color:#7F848E;font-style:italic;"> string param1=xxx&amp;param2=xxx</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> const</span><span style="color:#61AFEF;"> setUrlSearch</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">objs</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {}) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">  const</span><span style="color:#E5C07B;"> _rt</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">any</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> []</span></span>
<span class="line"><span style="color:#E5C07B;">  Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">keys</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">objs</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">forEach</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">key</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">    const</span><span style="color:#E5C07B;"> _val</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> objs</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#C678DD;">    if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">_val</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">      _rt</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">push</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">\`</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">key</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">=</span><span style="color:#C678DD;">\${</span><span style="color:#C678DD;">typeof</span><span style="color:#E06C75;"> _val</span><span style="color:#56B6C2;"> ===</span><span style="color:#98C379;"> &#39;object&#39;</span><span style="color:#C678DD;"> ?</span><span style="color:#E5C07B;"> JSON</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">stringify</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">_val</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">:</span><span style="color:#E06C75;"> _val</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">\`</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">  })</span></span>
<span class="line"><span style="color:#C678DD;">  return</span><span style="color:#E5C07B;"> _rt</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">join</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;&amp;&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre></div>`,24)),t(n)])}const D=a(c,[["render",r]]);export{E as __pageData,D as default};
