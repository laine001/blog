import{_ as a,c as n,o as l,ad as p}from"./chunks/framework.C6Isdag-.js";const F=JSON.parse('{"title":"nodejs实战笔记-常用功能","description":"","frontmatter":{"title":"nodejs实战笔记-常用功能","date":"2020-03-28T17:42:32.000Z","tags":"nodejs","categories":"nodejs","cover":"https://www4.bing.com//th?id=OHR.PontdArcole_ZH-CN5348049357_1920x1080.jpg&rf=LaDigue_1920x1080.jpg","thumbnail":"https://www4.bing.com//th?id=OHR.PontdArcole_ZH-CN5348049357_1920x1080.jpg&rf=LaDigue_1920x1080.jpg"},"headers":[],"relativePath":"fe/nodejs实战笔记-常用功能.md","filePath":"fe/nodejs实战笔记-常用功能.md","lastUpdated":1739323884000}'),o={name:"fe/nodejs实战笔记-常用功能.md"};function e(t,s,c,r,B,y){return l(),n("div",null,s[0]||(s[0]=[p(`<h1 id="创建静态文件服务器" tabindex="-1">创建静态文件服务器 <a class="header-anchor" href="#创建静态文件服务器" aria-label="Permalink to &quot;创建静态文件服务器&quot;">​</a></h1><h2 id="所需模块" tabindex="-1">所需模块 <a class="header-anchor" href="#所需模块" aria-label="Permalink to &quot;所需模块&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> http</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;http&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> fs</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;fs&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> path</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;path&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> mime</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;mime&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 附加的mime模块 有根据文件扩展名得出mime类型的能力</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> cache</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {}</span></span></code></pre></div><h2 id="工具函数" tabindex="-1">工具函数 <a class="header-anchor" href="#工具函数" aria-label="Permalink to &quot;工具函数&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 错误数据</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> send404</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">response</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">    response</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">writeHead</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">404</span><span style="color:#ABB2BF;">, { </span><span style="color:#98C379;">&#39;Content-Type&#39;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;text/plain&#39;</span><span style="color:#ABB2BF;"> })</span></span>
<span class="line"><span style="color:#E5C07B;">    response</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;Error 404: resource not found&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E5C07B;">    response</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">end</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 文件数据</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> sendFile</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">response</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">filePath</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">fileContents</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">    response</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">writeHead</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#D19A66;">        200</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">        { </span><span style="color:#98C379;">&#39;Content-Type&#39;</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">mime</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">lookup</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">basename</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">filePath</span><span style="color:#ABB2BF;">)) }</span></span>
<span class="line"><span style="color:#ABB2BF;">    )</span></span>
<span class="line"><span style="color:#E5C07B;">    response</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">end</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">fileContents</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre></div><h2 id="提供静态服务" tabindex="-1">提供静态服务 <a class="header-anchor" href="#提供静态服务" aria-label="Permalink to &quot;提供静态服务&quot;">​</a></h2><blockquote><p>访问内存(ram)要比访问文件系统快很多，node程序中通常会把常用的数据缓存到内存里。 只有第一次访问的时候需要从文件系统中读取</p></blockquote><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> serveStatic</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">response</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">cache</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">absPath</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">    if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">cache</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">absPath</span><span style="color:#ABB2BF;">]) {</span></span>
<span class="line"><span style="color:#61AFEF;">        sendFile</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">response</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">absPath</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">cache</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">absPath</span><span style="color:#ABB2BF;">])</span></span>
<span class="line"><span style="color:#ABB2BF;">    } </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">        fs</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">exists</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">absPath</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">isExist</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">            if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">isExist</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">                fs</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">readFile</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">absPath</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">err</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">data</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">                    if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">err</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#61AFEF;">                        send404</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">response</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">                    } </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                        // 从硬盘中读取文件并返回</span></span>
<span class="line"><span style="color:#E06C75;">                        cache</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">absPath</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> data</span></span>
<span class="line"><span style="color:#61AFEF;">                        sendFile</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">response</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">absPath</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">                    }</span></span>
<span class="line"><span style="color:#ABB2BF;">                })</span></span>
<span class="line"><span style="color:#ABB2BF;">            } </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#61AFEF;">                send404</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">response</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#ABB2BF;">        })</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre></div><h2 id="创建http服务器" tabindex="-1">创建http服务器 <a class="header-anchor" href="#创建http服务器" aria-label="Permalink to &quot;创建http服务器&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> server</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> http</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createServer</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">request</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">response</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">    var</span><span style="color:#E06C75;"> filePath</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">request</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">url</span><span style="color:#56B6C2;"> ==</span><span style="color:#98C379;"> &#39;/&#39;</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E06C75;">        filePath</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &#39;public/index.html&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">    } </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 将url路径转为文件的相对路径</span></span>
<span class="line"><span style="color:#E06C75;">        filePath</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &#39;public&#39;</span><span style="color:#56B6C2;"> +</span><span style="color:#E5C07B;"> request</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">url</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#C678DD;">    var</span><span style="color:#E06C75;"> absPath</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &#39;./&#39;</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> filePath</span></span>
<span class="line"><span style="color:#61AFEF;">    serveStatic</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">response</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">cache</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">absPath</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">server</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">listen</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">3000</span><span style="color:#ABB2BF;">)</span></span></code></pre></div>`,10)]))}const A=a(o,[["render",e]]);export{F as __pageData,A as default};
