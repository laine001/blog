import{_ as n,c as a,o as l,ad as p}from"./chunks/framework.CMzpCLzZ.js";const F=JSON.parse('{"title":"Vue原理一","description":"","frontmatter":{"title":"Vue原理一","date":"2020-04-20T17:39:41.000Z","tags":"vue"},"headers":[],"relativePath":"fe/Vue原理一.md","filePath":"fe/Vue原理一.md","lastUpdated":1755075416000}'),o={name:"fe/Vue原理一.md"};function e(t,s,c,r,B,y){return l(),a("div",null,s[0]||(s[0]=[p(`<h2 id="vue源码目录" tabindex="-1">vue源码目录 <a class="header-anchor" href="#vue源码目录" aria-label="Permalink to &quot;vue源码目录&quot;">​</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">├──</span><span style="color:#98C379;"> build</span><span style="color:#D19A66;"> ---------------------------------</span><span style="color:#98C379;"> 构建相关的文件</span></span>
<span class="line"><span style="color:#61AFEF;">├──</span><span style="color:#98C379;"> dist</span><span style="color:#D19A66;"> ----------------------------------</span><span style="color:#98C379;"> 构建后文件的输出目录</span></span>
<span class="line"><span style="color:#61AFEF;">├──</span><span style="color:#98C379;"> examples</span><span style="color:#D19A66;"> ------------------------------</span><span style="color:#98C379;"> 存放使用Vue开发的的例子</span></span>
<span class="line"><span style="color:#61AFEF;">├──</span><span style="color:#98C379;"> flow</span><span style="color:#D19A66;"> ----------------------------------</span><span style="color:#98C379;"> 类型声明，使用开源项目</span><span style="color:#ABB2BF;"> [Flow](</span><span style="color:#61AFEF;">https://flowtype.org/</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#61AFEF;">├──</span><span style="color:#98C379;"> package.json</span><span style="color:#D19A66;"> --------------------------</span><span style="color:#98C379;"> 项目依赖</span></span>
<span class="line"><span style="color:#61AFEF;">├──</span><span style="color:#98C379;"> test</span><span style="color:#D19A66;"> ----------------------------------</span><span style="color:#98C379;"> 包含所有测试文件</span></span>
<span class="line"><span style="color:#61AFEF;">├──</span><span style="color:#98C379;"> src</span><span style="color:#D19A66;"> -----------------------------------</span><span style="color:#98C379;"> 这个是我们最应该关注的目录，包含了源码</span></span>
<span class="line"><span style="color:#61AFEF;">│</span><span style="color:#98C379;">   ├──platforms</span><span style="color:#D19A66;"> ---------------------------</span><span style="color:#98C379;"> 包含平台相关的代码</span></span>
<span class="line"><span style="color:#61AFEF;">│</span><span style="color:#98C379;">   │</span><span style="color:#98C379;">   ├──web</span><span style="color:#D19A66;"> -----------------------------</span><span style="color:#98C379;">  包含了不同构建的包的入口文件</span></span>
<span class="line"><span style="color:#61AFEF;">│</span><span style="color:#98C379;">   │</span><span style="color:#ABB2BF;">   |   </span><span style="color:#61AFEF;">├──entry-runtime.js</span><span style="color:#D19A66;"> ----------------</span><span style="color:#98C379;"> 运行时构建的入口，输出</span><span style="color:#98C379;"> dist/vue.common.js</span><span style="color:#98C379;"> 文件，不包含模板</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">template</span><span style="color:#ABB2BF;">)</span><span style="color:#98C379;">到render函数的编译器，所以不支持</span><span style="color:#98C379;"> \`</span><span style="color:#61AFEF;">template</span><span style="color:#98C379;">\`</span><span style="color:#61AFEF;"> 选项，我们使用vue默认导出的就是这个运行时的版本。大家使用的时候要注意</span></span>
<span class="line"><span style="color:#61AFEF;">│</span><span style="color:#98C379;">   │</span><span style="color:#ABB2BF;">   |   </span><span style="color:#61AFEF;">├──</span><span style="color:#98C379;"> entry-runtime-with-compiler.js</span><span style="color:#D19A66;"> --</span><span style="color:#98C379;"> 独立构建版本的入口，输出</span><span style="color:#98C379;"> dist/vue.js，它包含模板</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">template</span><span style="color:#ABB2BF;">)</span><span style="color:#98C379;">到render函数的编译器</span></span>
<span class="line"><span style="color:#61AFEF;">│</span><span style="color:#98C379;">   ├──</span><span style="color:#98C379;"> compiler</span><span style="color:#D19A66;"> --------------------------</span><span style="color:#98C379;"> 编译器代码的存放目录，将</span><span style="color:#98C379;"> template</span><span style="color:#98C379;"> 编译为</span><span style="color:#98C379;"> render</span><span style="color:#98C379;"> 函数</span></span>
<span class="line"><span style="color:#61AFEF;">│</span><span style="color:#98C379;">   │</span><span style="color:#98C379;">   ├──</span><span style="color:#98C379;"> parser</span><span style="color:#D19A66;"> ------------------------</span><span style="color:#98C379;"> 存放将模板字符串转换成元素抽象语法树的代码</span></span>
<span class="line"><span style="color:#61AFEF;">│</span><span style="color:#98C379;">   │</span><span style="color:#98C379;">   ├──</span><span style="color:#98C379;"> codegen</span><span style="color:#D19A66;"> -----------------------</span><span style="color:#98C379;"> 存放从抽象语法树</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">AST</span><span style="color:#ABB2BF;">)</span><span style="color:#98C379;">生成render函数的代码</span></span>
<span class="line"><span style="color:#61AFEF;">│</span><span style="color:#98C379;">   │</span><span style="color:#98C379;">   ├──</span><span style="color:#98C379;"> optimizer.js</span><span style="color:#D19A66;"> ------------------</span><span style="color:#98C379;"> 分析静态树，优化vdom渲染</span></span>
<span class="line"><span style="color:#61AFEF;">│</span><span style="color:#98C379;">   ├──</span><span style="color:#98C379;"> core</span><span style="color:#D19A66;"> ------------------------------</span><span style="color:#98C379;"> 存放通用的，平台无关的代码</span></span>
<span class="line"><span style="color:#61AFEF;">│</span><span style="color:#98C379;">   │</span><span style="color:#98C379;">   ├──</span><span style="color:#98C379;"> observer</span><span style="color:#D19A66;"> ----------------------</span><span style="color:#98C379;"> 反应系统，包含数据观测的核心代码</span></span>
<span class="line"><span style="color:#61AFEF;">│</span><span style="color:#98C379;">   │</span><span style="color:#98C379;">   ├──</span><span style="color:#98C379;"> vdom</span><span style="color:#D19A66;"> --------------------------</span><span style="color:#98C379;"> 包含虚拟DOM创建</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">creation</span><span style="color:#ABB2BF;">)</span><span style="color:#98C379;">和打补丁</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">patching</span><span style="color:#ABB2BF;">)</span><span style="color:#98C379;">的代码</span></span>
<span class="line"><span style="color:#61AFEF;">│</span><span style="color:#98C379;">   │</span><span style="color:#98C379;">   ├──</span><span style="color:#98C379;"> instance</span><span style="color:#D19A66;"> ----------------------</span><span style="color:#98C379;"> 包含Vue构造函数设计相关的代码</span></span>
<span class="line"><span style="color:#61AFEF;">│</span><span style="color:#98C379;">   │</span><span style="color:#98C379;">   ├──</span><span style="color:#98C379;"> global-api</span><span style="color:#D19A66;"> --------------------</span><span style="color:#98C379;"> 包含给Vue构造函数挂载全局方法</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">静态方法</span><span style="color:#ABB2BF;">)</span><span style="color:#98C379;">或属性的代码</span></span>
<span class="line"><span style="color:#61AFEF;">│</span><span style="color:#98C379;">   │</span><span style="color:#98C379;">   ├──</span><span style="color:#98C379;"> components</span><span style="color:#D19A66;"> --------------------</span><span style="color:#98C379;"> 包含抽象出来的通用组件</span></span>
<span class="line"><span style="color:#61AFEF;">│</span><span style="color:#98C379;">   ├──</span><span style="color:#98C379;"> server</span><span style="color:#D19A66;"> ----------------------------</span><span style="color:#98C379;"> 包含服务端渲染</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">server-side</span><span style="color:#98C379;"> rendering</span><span style="color:#ABB2BF;">)</span><span style="color:#98C379;">的相关代码</span></span>
<span class="line"><span style="color:#61AFEF;">│</span><span style="color:#98C379;">   ├──</span><span style="color:#98C379;"> sfc</span><span style="color:#D19A66;"> -------------------------------</span><span style="color:#98C379;"> 包含单文件组件</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">.vue文件</span><span style="color:#ABB2BF;">)</span><span style="color:#98C379;">的解析逻辑，用于vue-template-compiler包</span></span>
<span class="line"><span style="color:#61AFEF;">│</span><span style="color:#98C379;">   ├──</span><span style="color:#98C379;"> shared</span><span style="color:#D19A66;"> ----------------------------</span><span style="color:#98C379;"> 包含整个代码库通用的代码</span></span></code></pre></div><h2 id="vue构造函数" tabindex="-1">Vue构造函数 <a class="header-anchor" href="#vue构造函数" aria-label="Permalink to &quot;Vue构造函数&quot;">​</a></h2><blockquote><p>目录<a href="https://github.com/vuejs/vue/blob/dev/src/core/instance/index.js" target="_blank" rel="noreferrer">/src/instance/index.js</a></p></blockquote><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> Vue</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">options</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">  if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">env</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">NODE_ENV</span><span style="color:#56B6C2;"> !==</span><span style="color:#98C379;"> &#39;production&#39;</span><span style="color:#56B6C2;"> &amp;&amp;</span></span>
<span class="line"><span style="color:#56B6C2;">    !</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">this</span><span style="color:#C678DD;"> instanceof</span><span style="color:#E5C07B;"> Vue</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  ) {</span></span>
<span class="line"><span style="color:#61AFEF;">    warn</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;Vue is a constructor and should be called with the \`new\` keyword&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#E5C07B;">  this</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">_init</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">options</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 在vue的原型prototype上挂载方法或属性 都在/src/core/instance目录下</span></span>
<span class="line"><span style="color:#61AFEF;">initMixin</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">Vue</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#61AFEF;">stateMixin</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">Vue</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#61AFEF;">eventMixin</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">Vue</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#61AFEF;">lifecycleMixin</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">Vue</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#61AFEF;">renderMixin</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">Vue</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> default</span><span style="color:#E06C75;"> Vue</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// initMixin</span></span>
<span class="line"><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">_init</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">options</span><span style="color:#ABB2BF;">) {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// stateMixin</span></span>
<span class="line"><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">$data</span></span>
<span class="line"><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">$props</span></span>
<span class="line"><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">$set</span></span>
<span class="line"><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">$delete</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> del</span></span>
<span class="line"><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">$watch</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> () {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// eventsMxin</span></span>
<span class="line"><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">$on</span></span>
<span class="line"><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">$once</span></span>
<span class="line"><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">$off</span></span>
<span class="line"><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">$emit</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// lifecycleMixin</span></span>
<span class="line"><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">_update</span></span>
<span class="line"><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">$forceUpdate</span></span>
<span class="line"><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">$destory</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// renderMixin</span></span>
<span class="line"><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">$nextTick</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">_render</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">_o</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> markOnce</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">_n</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> toNumber</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">_s</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> toString</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">_l</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> renderList</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">_t</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> renderSlot</span></span>
<span class="line"><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">_q</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> looseEqual</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">_i</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> looseIndexOf</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">_m</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> renderStatic</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">_f</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> resolveFilter</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">_k</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> checkKeyCodes</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">_b</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> bindObjectProps</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">_v</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> createTextVNode</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">_e</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> createEmptyVNode</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">_u</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> resolveScopedSlots</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">_g</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> bindObjectListeners</span></span></code></pre></div><h3 id="初始化实列" tabindex="-1">初始化实列 <a class="header-anchor" href="#初始化实列" aria-label="Permalink to &quot;初始化实列&quot;">​</a></h3><blockquote><p>根据Vue的生命周期，Vue首先会进行init初始化操作； 源码在src/core/instance/init.js中</p></blockquote><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/*初始化生命周期*/</span></span>
<span class="line"><span style="color:#61AFEF;">initLifecycle</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">vm</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/*初始化事件*/</span></span>
<span class="line"><span style="color:#61AFEF;">initEvents</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">vm</span><span style="color:#ABB2BF;">)</span><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">defineProperty</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/*初始化render*/</span></span>
<span class="line"><span style="color:#61AFEF;">initRender</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">vm</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/*调用beforeCreate钩子函数并且触发beforeCreate钩子事件*/</span></span>
<span class="line"><span style="color:#61AFEF;">callHook</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">vm</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;beforeCreate&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#61AFEF;">initInjections</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">vm</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// resolve injections before data/props</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/*初始化props、methods、data、computed与watch*/</span></span>
<span class="line"><span style="color:#61AFEF;">initState</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">vm</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">initProvide</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">vm</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// resolve provide after data/props</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/*调用created钩子函数并且触发created钩子事件*/</span></span>
<span class="line"><span style="color:#61AFEF;">callHook</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">vm</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;created&#39;</span><span style="color:#ABB2BF;">)</span></span></code></pre></div><h2 id="引入依赖-挂载静态方法和属性" tabindex="-1">引入依赖，挂载静态方法和属性 <a class="header-anchor" href="#引入依赖-挂载静态方法和属性" aria-label="Permalink to &quot;引入依赖，挂载静态方法和属性&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// [/src/core/index.js](https://github.com/vuejs/vue/blob/dev/src/core/index.js)</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> Vue</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &#39;./instance/index&#39;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">initGlobalAPI</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;./global-api/index&#39;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">isServerRendering</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;core/util/env&#39;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// import { FunctionalRenderContext } from &#39;core/vdom/create-functional-component&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">initGlobalAPI</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">Vue</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">defineProperty</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;$isServer&#39;</span><span style="color:#ABB2BF;">, {</span></span>
<span class="line"><span style="color:#E06C75;">  get</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">isServerRendering</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">defineProperty</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;$ssrContext&#39;</span><span style="color:#ABB2BF;">, {</span></span>
<span class="line"><span style="color:#61AFEF;">  get</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    /* istanbul ignore next */</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">$vnode</span><span style="color:#56B6C2;"> &amp;&amp;</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">$vnode</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">ssrContext</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// expose FunctionalRenderContext for ssr runtime helper installation</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Object.defineProperty(Vue, &#39;FunctionalRenderContext&#39;, {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//   value: FunctionalRenderContext</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">version</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &#39;__VERSION__&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> default</span><span style="color:#E06C75;"> Vue</span></span></code></pre></div><h3 id="进入global-api" tabindex="-1">进入global-api <a class="header-anchor" href="#进入global-api" aria-label="Permalink to &quot;进入global-api&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">set</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> set</span></span>
<span class="line"><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">delete</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> del</span></span>
<span class="line"><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">nextTick</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> nextTick</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// ASSET_TYPES: [&#39;component&#39;, &#39;directive&#39;, &#39;filter&#39;]</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// ASSET_TYPES.forEach(type =&gt; {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//   Vue.options[type + &#39;s&#39;] = Object.create(null)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// })</span></span>
<span class="line"><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">options</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">  components</span><span style="color:#ABB2BF;">: { </span><span style="color:#E06C75;">KeepAlive</span><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#E06C75;">  directives</span><span style="color:#ABB2BF;">: {},</span></span>
<span class="line"><span style="color:#E06C75;">  filters</span><span style="color:#ABB2BF;">: {},</span></span>
<span class="line"><span style="color:#E06C75;">  _base</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">Vue</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">use</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">mixin</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">cid</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">extend</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">component</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;">(){} </span></span>
<span class="line"><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">directive</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;">(){} </span></span>
<span class="line"><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">filter</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;">(){}</span></span></code></pre></div><h4 id="object-defineproperty-响应式实现" tabindex="-1">Object.defineProperty 响应式实现 <a class="header-anchor" href="#object-defineproperty-响应式实现" aria-label="Permalink to &quot;Object.defineProperty 响应式实现&quot;">​</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> function</span><span style="color:#61AFEF;"> defineReactive</span><span style="color:#ABB2BF;"> (</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">  obj</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">  key</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">  val</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">any</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">  customSetter</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: </span><span style="color:#C678DD;">?</span><span style="color:#E5C07B;">Function</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">  shallow</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">boolean</span></span>
<span class="line"><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // ...</span></span>
<span class="line"><span style="color:#E5C07B;">  Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">defineProperty</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">, {</span></span>
<span class="line"><span style="color:#E06C75;">    enumerable</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    configurable</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#61AFEF;">    get</span><span style="color:#ABB2BF;">: </span><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> reactiveGetter</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#C678DD;">      const</span><span style="color:#E5C07B;"> value</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> getter</span><span style="color:#C678DD;"> ?</span><span style="color:#E5C07B;"> getter</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">call</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">:</span><span style="color:#E06C75;"> val</span></span>
<span class="line"><span style="color:#C678DD;">      if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">Dep</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">target</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">        dep</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">depend</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#C678DD;">        if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">childOb</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">          childOb</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">dep</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">depend</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#C678DD;">          if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">Array</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">isArray</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#61AFEF;">            dependArray</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">          }</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#C678DD;">      return</span><span style="color:#E06C75;"> value</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#61AFEF;">    set</span><span style="color:#ABB2BF;">: </span><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> reactiveSetter</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">newVal</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">      const</span><span style="color:#E5C07B;"> value</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> getter</span><span style="color:#C678DD;"> ?</span><span style="color:#E5C07B;"> getter</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">call</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">:</span><span style="color:#E06C75;"> val</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      /* eslint-disable no-self-compare */</span></span>
<span class="line"><span style="color:#C678DD;">      if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">newVal</span><span style="color:#56B6C2;"> ===</span><span style="color:#E06C75;"> value</span><span style="color:#56B6C2;"> ||</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">newVal</span><span style="color:#56B6C2;"> !==</span><span style="color:#E06C75;"> newVal</span><span style="color:#56B6C2;"> &amp;&amp;</span><span style="color:#E06C75;"> value</span><span style="color:#56B6C2;"> !==</span><span style="color:#E06C75;"> value</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#C678DD;">        return</span></span>
<span class="line"><span style="color:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      /* eslint-enable no-self-compare */</span></span>
<span class="line"><span style="color:#C678DD;">      if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">env</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">NODE_ENV</span><span style="color:#56B6C2;"> !==</span><span style="color:#98C379;"> &#39;production&#39;</span><span style="color:#56B6C2;"> &amp;&amp;</span><span style="color:#E06C75;"> customSetter</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#61AFEF;">        customSetter</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#C678DD;">      if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">setter</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">        setter</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">call</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">newVal</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">      } </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">        val</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> newVal</span></span>
<span class="line"><span style="color:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#E06C75;">      childOb</span><span style="color:#56B6C2;"> =</span><span style="color:#56B6C2;"> !</span><span style="color:#E06C75;">shallow</span><span style="color:#56B6C2;"> &amp;&amp;</span><span style="color:#61AFEF;"> observe</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">newVal</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E5C07B;">      dep</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">notify</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">  })</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre></div><h4 id="vnode概念" tabindex="-1">VNode概念 <a class="header-anchor" href="#vnode概念" aria-label="Permalink to &quot;VNode概念&quot;">​</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> default</span><span style="color:#C678DD;"> class</span><span style="color:#E5C07B;"> VNode</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">  tag</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">void</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">  data</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">VNodeData</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">void</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">  children</span><span style="color:#ABB2BF;">: </span><span style="color:#C678DD;">?</span><span style="color:#E5C07B;">Array</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">VNode</span><span style="color:#ABB2BF;">&gt;;</span></span>
<span class="line"><span style="color:#E06C75;">  text</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">void</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">  elm</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Node</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">void</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">  ns</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">void</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">  context</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Component</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">void</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// rendered in this component&#39;s scope</span></span>
<span class="line"><span style="color:#E06C75;">  key</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">void</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">  componentOptions</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">VNodeComponentOptions</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">void</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">  componentInstance</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Component</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">void</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// component instance</span></span>
<span class="line"><span style="color:#E06C75;">  parent</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">VNode</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">void</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// component placeholder node</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // strictly internal</span></span>
<span class="line"><span style="color:#E06C75;">  raw</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">boolean</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// contains raw HTML? (server only)</span></span>
<span class="line"><span style="color:#E06C75;">  isStatic</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">boolean</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// hoisted static node</span></span>
<span class="line"><span style="color:#E06C75;">  isRootInsert</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">boolean</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// necessary for enter transition check</span></span>
<span class="line"><span style="color:#E06C75;">  isComment</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">boolean</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// empty comment placeholder?</span></span>
<span class="line"><span style="color:#E06C75;">  isCloned</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">boolean</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// is a cloned node?</span></span>
<span class="line"><span style="color:#E06C75;">  isOnce</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">boolean</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// is a v-once node?</span></span>
<span class="line"><span style="color:#61AFEF;">  asyncFactory</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Function</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">void</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// async component factory function</span></span>
<span class="line"><span style="color:#E06C75;">  asyncMeta</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">void</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">  isAsyncPlaceholder</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">boolean</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">  ssrContext</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">void</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">  fnContext</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Component</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">void</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// real context vm for functional nodes</span></span>
<span class="line"><span style="color:#E06C75;">  fnOptions</span><span style="color:#ABB2BF;">: </span><span style="color:#C678DD;">?</span><span style="color:#E5C07B;">ComponentOptions</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// for SSR caching</span></span>
<span class="line"><span style="color:#E06C75;">  fnScopeId</span><span style="color:#ABB2BF;">: </span><span style="color:#C678DD;">?</span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // ...</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre></div>`,16)]))}const C=n(o,[["render",e]]);export{F as __pageData,C as default};
